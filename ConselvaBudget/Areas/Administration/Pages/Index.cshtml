@page
@model IndexModel
@{
    ViewData["Title"] = "Administration dashboard";
}

<h1 class="pb-2 border-bottom">Administration</h1>

<p>Manage the main catalogs used by the database. These serve as the base upon the rest of the data is created.</p>

<div class="card mb-2" style="width: 18rem;">
    <div class="card-body">
        <h5 class="card-title">On this page</h5>
        <ul class="list-unstyled mb-0">
            <li><a href="#accounts">Accounts</a></li>
            <li><a href="#programs">Programs</a></li>
            <li><a href="#subprograms">Subprograms</a></li>
            <li><a href="#projects">Projects</a></li>
        </ul>
    </div>
</div>

<h2 id="accounts">Accounts</h2>

<p>Accounts catalog used by the database.</p>

<p><a class="btn btn-primary" asp-page="Accounts/Create">Create account</a></p>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Accounts[0].Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Accounts[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Accounts[0].Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Accounts)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="align-middle">
                    <div class="d-flex gap-1 justify-content-center">
                        <a class="btn btn-secondary btn-sm" asp-page="Accounts/Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-danger btn-sm" asp-page="Accounts/Delete" asp-route-id="@item.Id">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<h2 id="programs">Programs</h2>

<p>First level in the program/subprogram hierarchy.</p>

<p><a class="btn btn-primary" asp-page="Programs/Create">Create program</a></p>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BusinessPrograms[0].Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BusinessPrograms[0].Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.BusinessPrograms)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="align-middle">
                    <div class="d-flex gap-1 justify-content-center">
                        <a class="btn btn-secondary btn-sm" asp-page="Programs/Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-danger btn-sm" asp-page="Programs/Delete" asp-route-id="@item.Id">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<h2 id="subprograms">Subprograms</h2>

<p>Second level in the program/subprogram hierarchy. Every <b>Subprogram</b> is under a <b>Program</b>.</p>

@foreach (var program in Model.BusinessPrograms)
{
    <div class="card mb-2">
        <h3 class="h5 card-header">
            @Html.DisplayFor(modelItem => program.DisplayName)
        </h3>
        <div class="card-body">
            <p><a class="btn btn-primary" asp-page="Subprograms/Create" asp-route-programId="@program.Id">Create subprogram</a></p>
            <ul class="list-group">
                @foreach (var subprogram in program.BusinessSubprograms.OrderBy(s => s.Code))
                {
                    <li class="list-group-item">
                        <div class="d-flex align-items-center gap-2 border-bottom pb-2 mb-2">
                            <h4 class="h5 flex-grow-1 mb-0">@Html.DisplayFor(modelItem => subprogram.DisplayName)</h4>
                            <div class="d-flex gap-1">
                                <a class="btn btn-secondary btn-sm" asp-page="Subprograms/Edit" asp-route-id="@subprogram.Id">Edit</a>
                                <a class="btn btn-danger btn-sm" asp-page="Subprograms/Delete" asp-route-id="@subprogram.Id">Delete</a>
                            </div>
                        </div>
                        <h5 class="h6 text-body-secondary">Accounts</h5>
                        @if (subprogram.AccountAssignments.Count > 0)
                        {
                            <ul class="list-group">
                                @foreach (var assignment in subprogram.AccountAssignments.OrderBy(s => s.Account.Code))
                                {
                                    var fullAccountName = $"{program.Code} - {subprogram.Code} - {assignment.Account.DisplayName}";
                                    <li class="list-group-item">@fullAccountName</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="alert alert-warning mb-0" role="alert">
                                <span>This subprogram contains no assigned accounts.</span>
                            </div>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
}

<h2 id="projects">Projects</h2>

<p>Main <b>Project</b> entity in the database. Parent element of the <b>Results</b> and <b>Activities</b> hierarchy.</p>

<p><a class="btn btn-primary" asp-page="Projects/Create">Create new</a></p>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Segment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].ShortName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Comments)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Projects)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Segment)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.ShortName)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Comments)
                </td>
                <td class="align-middle">
                    <div class="d-flex gap-1 justify-content-center">
                        <a class="btn btn-secondary btn-sm" asp-page="Projects/Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-danger btn-sm" asp-page="Projects/Delete" asp-route-id="@item.Id">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
