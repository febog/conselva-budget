@page
@inject IViewLocalizer Localizer
@model DetailsModel
@using ConselvaBudget.Authorization
@using ConselvaBudget.Models

@{
    ViewData["Title"] = @Localizer["PAGE_TITLE"].Value + " " + Model.SpendingRequest.Id;
}

<h1 class="pb-2 border-bottom">@ViewData["Title"]</h1>



<dl class="row">
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.Id)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.Id)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.Status)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @switch (Model.SpendingRequest.Status)
        {
            case RequestStatus.Created:
                <span class="badge text-bg-light"><i class="bi bi-file-earmark-plus"></i> @Localizer["Creada"]</span>
                break;
            case RequestStatus.Submitted:
                <span class="badge text-bg-secondary"><i class="bi bi-hourglass"></i> @Localizer["En revisión"]</span>
                break;
            case RequestStatus.Approved:
                <span class="badge text-bg-info"><i class="bi bi-file-earmark-check"></i> @Localizer["Aprobada"]</span>
                break;
            case RequestStatus.Verification:
                <span class="badge text-bg-warning"><i class="bi bi-list-check"></i> @Localizer["En comprobación"]</span>
                break;
            case RequestStatus.Completed:
                <span class="badge text-bg-success"><i class="bi bi-check2-circle"></i> @Localizer["Completada"]</span>
                break;
        }
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.Activity.Result.Project)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.Activity.Result.Project.Name)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.Activity.Result)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.Activity.Result.Code)
        @Html.DisplayFor(model => model.SpendingRequest.Activity.Result.Description)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.Activity)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.Activity.Code)
        @Html.DisplayFor(model => model.SpendingRequest.Activity.Description)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.Description)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.Description)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.RequestorUserId)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @ViewData["RequestorUsername"]
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.CreatedDate)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.CreatedDate)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.ModifiedDate)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.ModifiedDate)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.PaymentSubtotals.Reimbursement)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.PaymentSubtotals.Reimbursement)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.PaymentSubtotals.PrePaidSubtotal)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.PaymentSubtotals.PrePaidSubtotal)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.TotalTaxWithheld)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.TotalTaxWithheld)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.TotalSpentAmount)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @Html.DisplayFor(model => model.SpendingRequest.TotalSpentAmount)
    </dd>
    <dt class="col-sm-3 col-lg-2">
        @Html.DisplayNameFor(model => model.SpendingRequest.IsPaid)
    </dt>
    <dd class="col-sm-9 col-lg-10">
        @if (Model.SpendingRequest.IsPaid)
        {
            <span class="badge text-bg-success"><i class="bi bi-check-lg"></i> @Localizer["PAID"]</span>
        }
        else
        {
            <span class="badge text-bg-secondary"><i class="bi bi-hourglass"></i> @Localizer["PENDING"]</span>
        }
    </dd>
</dl>

@if (Model.SpendingRequest.Trip != null)
{
    <h2 class="h5">@Localizer["TRIP_INFORMATION_HEADING"]</h2>
    <dl class="row">
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.Driver)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.Driver)
        </dd>
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.Destination)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.Destination)
        </dd>
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.Vehicle)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.Vehicle.Name)
        </dd>
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.Participants)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.Participants)
        </dd>
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.SelectedDates)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.SelectedDatesString)
        </dd>
    </dl>
    <h2 class="h5">@Localizer["TRIP_REPORT_HEADING"]</h2>
    <dl class="row">
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.CarriedOutActivities)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.CarriedOutActivities)
        </dd>
    </dl>
    <h3 class="h6">@Localizer["QUANTITATIVE_RESULTS_HEADING"]</h3>
    <dl class="row">
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.SocialResults)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.SocialResults)
        </dd>
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.TechnicalResults)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.TechnicalResults)
        </dd>
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.ContributedResources)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.ContributedResources)
        </dd>
    </dl>
    <h3 class="h6">@Localizer["QUALITATIVE_RESULTS_HEADING"]</h3>
    <dl class="row">
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.QualitativeResults)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.QualitativeResults)
        </dd>
        <dt class="col-sm-3 col-lg-2">
            @Html.DisplayNameFor(model => model.SpendingRequest.Trip.PicturesUrl)
        </dt>
        <dd class="col-sm-9 col-lg-10">
            @Html.DisplayFor(model => model.SpendingRequest.Trip.PicturesUrl)
        </dd>
    </dl>
}

<div class="d-flex gap-1 mb-2">
    @if (Model.SpendingRequest.Status == RequestStatus.Created || Model.SpendingRequest.Status == RequestStatus.Submitted)
    {
        <a class="btn btn-primary" asp-page="/AmountRequests/Create" asp-route-request="@Model.SpendingRequest.Id">Crear solicitud de gasto</a>
    }
    @if (Model.SpendingRequest.Status == RequestStatus.Verification)
    {
        <a class="btn btn-primary" asp-page="/ExpenseInvoices/Create" asp-route-request="@Model.SpendingRequest.Id">Agregar factura</a>
    }
    @if (Model.SpendingRequest.Status != RequestStatus.Completed)
    {
        <a class="btn btn-secondary" asp-page="./Edit" asp-route-id="@Model.SpendingRequest.Id">@Localizer["BUTTON_EDIT_REQUEST"]</a>
    }
    @if (Model.SpendingRequest.Status == RequestStatus.Created)
    {
        <form method="post" asp-page-handler="submitForReview" asp-route-request="@Model.SpendingRequest.Id">
            <input class="btn btn-success" type="submit" value="@Localizer["BUTTON_SUBMIT_FOR_REVIEW"]">
        </form>
    }
    @if (User.IsInRole(Roles.Management) && Model.SpendingRequest.Status == RequestStatus.Submitted)
    {
        <form method="post" asp-page-handler="approve" asp-route-request="@Model.SpendingRequest.Id">
            <input class="btn btn-success" type="submit" value="@Localizer["BUTTON_APPROVE"]">
        </form>
    }
    @if (Model.SpendingRequest.Status == RequestStatus.Approved)
    {
        <form method="post" asp-page-handler="startVerification" asp-route-request="@Model.SpendingRequest.Id">
            <input class="btn btn-success" type="submit" value="@Localizer["BUTTON_VERIFICATION"]">
        </form>
    }
    @if (User.IsInRole(Roles.Administrator) && Model.SpendingRequest.Status == RequestStatus.Verification)
    {
        <form method="post" asp-page-handler="completeRequest" asp-route-request="@Model.SpendingRequest.Id">
            <input class="btn btn-success" type="submit" value="@Localizer["BUTTON_COMPLETE"]">
        </form>
    }
    @if (User.IsInRole(Roles.Administrator) && Model.SpendingRequest.Status != RequestStatus.Created)
    {
        <form method="post" asp-page-handler="setAsCreated" asp-route-request="@Model.SpendingRequest.Id">
            <input class="btn btn-danger" type="submit" value="@Localizer["BUTTON_SET_AS_CREATED"]">
        </form>
    }
    @if (User.IsInRole(Roles.Administrator) && Model.SpendingRequest.Status == RequestStatus.Completed && !Model.SpendingRequest.IsPaid)
    {
        <form method="post" asp-page-handler="markAsPaid" asp-route-request="@Model.SpendingRequest.Id">
            <input class="btn btn-success" type="submit" value="@Localizer["BUTTON_MARK_AS_PAID"]">
        </form>
    }
    @if (User.IsInRole(Roles.Administrator) && Model.SpendingRequest.Status == RequestStatus.Completed && Model.SpendingRequest.IsPaid)
    {
        <form method="post" asp-page-handler="markAsNotPaid" asp-route-request="@Model.SpendingRequest.Id">
            <input class="btn btn-danger" type="submit" value="@Localizer["BUTTON_MARK_AS_NOT_PAID"]">
        </form>
    }
</div>

<h2>Montos solicitados</h2>

<table class="table table-bordered table-striped caption-top">
    <caption>Montos <b>solicitados</b>.</caption>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SpendingRequest.AmountRequests.ToList()[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SpendingRequest.AmountRequests.ToList()[0].Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SpendingRequest.AmountRequests.ToList()[0].ActivityBudgetId)
            </th>
            <th style="width: 1px; white-space:nowrap;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SpendingRequest.AmountRequests)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.ActivityBudget.AccountAssignment.DisplayName)
                </td>
                <td class="align-middle">
                    <table-buttons>
                        @if (Model.SpendingRequest.Status == RequestStatus.Created || Model.SpendingRequest.Status == RequestStatus.Submitted)
                        {
                            <edit-button asp-page="/AmountRequests/Edit" asp-route-id="@item.Id"></edit-button>
                            <delete-button asp-page="/AmountRequests/Delete" asp-route-id="@item.Id"></delete-button>
                        }
                    </table-buttons>
                </td>
            </tr>
        }
    </tbody>
</table>

<table class="table table-bordered table-striped caption-top">
    <caption>Monto <b>solicitado</b> por cuenta.</caption>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RequestedSubtotals.ToList()[0].AccountAssignment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequestedSubtotals.ToList()[0].Amount)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.RequestedSubtotals)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.AccountAssignment)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th>Total</th>
            <th>
                @{
                    var requestedTotal = string.Format("{0:C}", Model.RequestedSubtotals.Sum(r => r.Amount));
                }
                @Html.DisplayFor(modelItem => requestedTotal)

            </th>
        </tr>
    </tfoot>
</table>

@if (Model.SpendingRequest.ExpenseInvoices.Count > 0)
{
    <h2>Facturas</h2>

    <table class="table table-bordered table-striped caption-top">
        <caption>Lista de <b>facturas</b> en esta solicitud.</caption>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].InvoiceDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].Vendor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].TaxWithheld)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].TotalSpentAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].InvoiceNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].ActivityBudget.AccountAssignment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.ExpenseInvoices.ToList()[0].PaymentMethod)
                </th>
                <th style="width: 1px; white-space:nowrap;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SpendingRequest.ExpenseInvoices)
            {
                <tr>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.InvoiceDate)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Vendor)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td class="align-middle">
                        @{
                            var taxWithheldAmount = string.Format("{0:C}", item.TaxWithheld ?? 0);
                        }
                        @Html.DisplayFor(model => taxWithheldAmount)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.TotalSpentAmount)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.InvoiceNumber)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.ActivityBudget.AccountAssignment.DisplayName)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.PaymentMethod)
                    </td>
                    <td class="align-middle">
                        <table-buttons>
                            <details-button asp-page="/ExpenseInvoices/Details" asp-route-id="@item.Id"></details-button>
                            @if (Model.SpendingRequest.Status == RequestStatus.Verification)
                            {
                                <edit-button asp-page="/ExpenseInvoices/Edit" asp-route-id="@item.Id"></edit-button>
                                <delete-button asp-page="/ExpenseInvoices/Delete" asp-route-id="@item.Id"></delete-button>
                            }
                        </table-buttons>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <table class="table table-bordered table-striped caption-top">
        <caption>Monto <b>facturado</b> por cuenta.</caption>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.InvoicedSubtotals.ToList()[0].AccountAssignment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InvoicedSubtotals.ToList()[0].Amount)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.InvoicedSubtotals)
            {
                <tr>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.AccountAssignment)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Total</th>
                <th>
                    @{
                        var invoicedTotal = string.Format("{0:C}", Model.InvoicedSubtotals.Sum(r => r.Amount));
                    }
                    @Html.DisplayFor(modelItem => invoicedTotal)

                </th>
            </tr>
        </tfoot>
    </table>

    <table class="table table-bordered table-striped caption-top">
        <caption>Subtotales de lo <b>facturado</b> por forma de pago/impuestos retenidos.</caption>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentSubtotals.CashSubtotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentSubtotals.DebitCardSubtotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentSubtotals.CreditCardSubtotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentSubtotals.TransferSubtotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentSubtotals.PrePaidSubtotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpendingRequest.TotalTaxWithheld)
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(model => model.PaymentSubtotals.CashSubtotal)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(model => model.PaymentSubtotals.DebitCardSubtotal)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(model => model.PaymentSubtotals.CreditCardSubtotal)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(model => model.PaymentSubtotals.TransferSubtotal)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(model => model.PaymentSubtotals.PrePaidSubtotal)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(model => model.SpendingRequest.TotalTaxWithheld)
                </td>
            </tr>
        </tbody>
    </table>

    <dl>
        <dt>
            @Html.DisplayNameFor(model => model.PaymentSubtotals.CashPlusDebit)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PaymentSubtotals.CashPlusDebit)
        </dd>
    </dl>
}


@* <h2>Facturas</h2>

<table class="table table-bordered table-striped caption-top">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SpendingRequest.AmountRequests.ToList()[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SpendingRequest.AmountRequests.ToList()[0].Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SpendingRequest.AmountRequests.ToList()[0].ActivityBudgetId)
            </th>
            <th style="width: 1px; white-space:nowrap;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SpendingRequest.AmountRequests)
        {
            <tr>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.ActivityBudget.AccountAssignment.DisplayName)
                </td>
                <td class="align-middle">
                    <table-buttons>
                        <details-button asp-page="/AmountRequests/Details" asp-route-id="@item.Id"></details-button>
                        @if (Model.SpendingRequest.Status == RequestStatus.Created || Model.SpendingRequest.Status == RequestStatus.Submitted)
                        {
                            <edit-button asp-page="/AmountRequests/Edit" asp-route-id="@item.Id"></edit-button>
                            <delete-button asp-page="/AmountRequests/Delete" asp-route-id="@item.Id"></delete-button>
                        }
                    </table-buttons>
                </td>
            </tr>
        }
    </tbody>
</table> *@


@*
@section TableHeaders {
    <th>
        @Html.DisplayNameFor(model => model.SpendingRequest.Expenses.ToList()[0].Description)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.SpendingRequest.Expenses.ToList()[0].Vendor)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.SpendingRequest.Expenses.ToList()[0].Amount)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.SpendingRequest.Expenses.ToList()[0].ExpenseDate)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.SpendingRequest.Expenses.ToList()[0].ActivityBudget.Activity.Result.Project)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.SpendingRequest.Expenses.ToList()[0].ActivityBudget.Activity)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.SpendingRequest.Expenses.ToList()[0].ActivityBudget.AccountAssignment)
    </th>
}

@foreach (var item in Model.SpendingRequest.Expenses)
{
    <tr>
        <td class="align-middle">
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td class="align-middle">
            @Html.DisplayFor(modelItem => item.Vendor)
        </td>
        <td class="align-middle">
            @Html.DisplayFor(modelItem => item.Amount)
        </td>
        <td class="align-middle">
            @Html.DisplayFor(modelItem => item.ExpenseDate)
        </td>
        <td class="align-middle">
            @Html.DisplayFor(modelItem => item.ActivityBudget.Activity.Result.Project.Name)
        </td>
        <td class="align-middle">
            @Html.DisplayFor(modelItem => item.ActivityBudget.Activity.Code)
        </td>
        <td class="align-middle">
            @Html.DisplayFor(modelItem => item.ActivityBudget.AccountAssignment.DisplayName)
        </td>
        <td class="align-middle">
            <table-buttons>
                <details-button asp-page="/Expenses/Details" asp-route-id="@item.Id"></details-button>
                <edit-button asp-page="/Expenses/Edit" asp-route-id="@item.Id"></edit-button>
                <delete-button asp-page="/Expenses/Delete" asp-route-id="@item.Id"></delete-button>
            </table-buttons>
        </td>
    </tr>
}
 *@