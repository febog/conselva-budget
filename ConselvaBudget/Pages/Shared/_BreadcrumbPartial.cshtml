@{
    // This is a very simple BreadCrumb logic that pulls its data from the
    // current route. It assumes that all pages in this app are going to
    // follow a 3-part Area/Folder/View structure.
    // In Razor pages, this is provided by the "area" and "page" route values
    // contained in RouteData.
    // The "page" contains a string like "/Organizations/Index" so it needs to be split
    // so that it is added as a separte entitity in the Breadcrumb. For example:
    // " Administration >> Organizations >> Index "
    var areaName = ViewContext.RouteData.Values["area"]?.ToString();
    var pageName = ViewContext.RouteData.Values["page"]?.ToString();
    var folder = string.Empty;
    var view = string.Empty;
    if (!string.IsNullOrEmpty(pageName))
    {
        string[] sections = pageName.Split('/', StringSplitOptions.RemoveEmptyEntries);
        if (sections.Length == 1)
        {
            // If sections has 1 item, we are either in a non-area view or in an area root view.
            view = sections[0];
        }
        else
        {
            // We are in a folder
            folder = sections[0];
            view = sections[1];
        }
    }
}

<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            Home
        </li>
        @if (!string.IsNullOrEmpty(areaName))
        {
            <li class="breadcrumb-item">
                @areaName
            </li>
        }
        @if (!string.IsNullOrEmpty(folder))
        {
            <li class="breadcrumb-item">
                @folder
            </li>
        }
        @if (!string.IsNullOrEmpty(view))
        {
            <li class="breadcrumb-item active" aria-current="page">
                @view
            </li>
        }
    </ol>
</nav>